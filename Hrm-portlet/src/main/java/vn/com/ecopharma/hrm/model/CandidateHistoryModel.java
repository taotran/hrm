package vn.com.ecopharma.hrm.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the CandidateHistory service. Represents a row in the &quot;HRM_Recruitment_CandidateHistory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.com.ecopharma.hrm.model.impl.CandidateHistoryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.com.ecopharma.hrm.model.impl.CandidateHistoryImpl}.
 * </p>
 *
 * @author tvt
 * @see CandidateHistory
 * @see vn.com.ecopharma.hrm.model.impl.CandidateHistoryImpl
 * @see vn.com.ecopharma.hrm.model.impl.CandidateHistoryModelImpl
 * @generated
 */
public interface CandidateHistoryModel extends BaseModel<CandidateHistory> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a candidate history model instance should use the {@link CandidateHistory} interface instead.
     */

    /**
     * Returns the primary key of this candidate history.
     *
     * @return the primary key of this candidate history
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this candidate history.
     *
     * @param primaryKey the primary key of this candidate history
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the candidate history ID of this candidate history.
     *
     * @return the candidate history ID of this candidate history
     */
    public long getCandidateHistoryId();

    /**
     * Sets the candidate history ID of this candidate history.
     *
     * @param candidateHistoryId the candidate history ID of this candidate history
     */
    public void setCandidateHistoryId(long candidateHistoryId);

    /**
     * Returns the c_id of this candidate history.
     *
     * @return the c_id of this candidate history
     */
    public long getC_id();

    /**
     * Sets the c_id of this candidate history.
     *
     * @param c_id the c_id of this candidate history
     */
    public void setC_id(long c_id);

    /**
     * Returns the v_id of this candidate history.
     *
     * @return the v_id of this candidate history
     */
    public long getV_id();

    /**
     * Sets the v_id of this candidate history.
     *
     * @param v_id the v_id of this candidate history
     */
    public void setV_id(long v_id);

    /**
     * Returns the interview ID of this candidate history.
     *
     * @return the interview ID of this candidate history
     */
    public long getInterviewId();

    /**
     * Sets the interview ID of this candidate history.
     *
     * @param interviewId the interview ID of this candidate history
     */
    public void setInterviewId(long interviewId);

    /**
     * Returns the performed_by of this candidate history.
     *
     * @return the performed_by of this candidate history
     */
    public long getPerformed_by();

    /**
     * Sets the performed_by of this candidate history.
     *
     * @param performed_by the performed_by of this candidate history
     */
    public void setPerformed_by(long performed_by);

    /**
     * Returns the performed date of this candidate history.
     *
     * @return the performed date of this candidate history
     */
    public Date getPerformedDate();

    /**
     * Sets the performed date of this candidate history.
     *
     * @param performedDate the performed date of this candidate history
     */
    public void setPerformedDate(Date performedDate);

    /**
     * Returns the note of this candidate history.
     *
     * @return the note of this candidate history
     */
    @AutoEscape
    public String getNote();

    /**
     * Sets the note of this candidate history.
     *
     * @param note the note of this candidate history
     */
    public void setNote(String note);

    /**
     * Returns the interviewers of this candidate history.
     *
     * @return the interviewers of this candidate history
     */
    @AutoEscape
    public String getInterviewers();

    /**
     * Sets the interviewers of this candidate history.
     *
     * @param interviewers the interviewers of this candidate history
     */
    public void setInterviewers(String interviewers);

    /**
     * Returns the action of this candidate history.
     *
     * @return the action of this candidate history
     */
    @AutoEscape
    public String getAction();

    /**
     * Sets the action of this candidate history.
     *
     * @param action the action of this candidate history
     */
    public void setAction(String action);

    /**
     * Returns the group ID of this candidate history.
     *
     * @return the group ID of this candidate history
     */
    public long getGroupId();

    /**
     * Sets the group ID of this candidate history.
     *
     * @param groupId the group ID of this candidate history
     */
    public void setGroupId(long groupId);

    /**
     * Returns the company ID of this candidate history.
     *
     * @return the company ID of this candidate history
     */
    public long getCompanyId();

    /**
     * Sets the company ID of this candidate history.
     *
     * @param companyId the company ID of this candidate history
     */
    public void setCompanyId(long companyId);

    /**
     * Returns the user ID of this candidate history.
     *
     * @return the user ID of this candidate history
     */
    public long getUserId();

    /**
     * Sets the user ID of this candidate history.
     *
     * @param userId the user ID of this candidate history
     */
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this candidate history.
     *
     * @return the user uuid of this candidate history
     * @throws SystemException if a system exception occurred
     */
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this candidate history.
     *
     * @param userUuid the user uuid of this candidate history
     */
    public void setUserUuid(String userUuid);

    /**
     * Returns the user name of this candidate history.
     *
     * @return the user name of this candidate history
     */
    @AutoEscape
    public String getUserName();

    /**
     * Sets the user name of this candidate history.
     *
     * @param userName the user name of this candidate history
     */
    public void setUserName(String userName);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(CandidateHistory candidateHistory);

    @Override
    public int hashCode();

    @Override
    public CacheModel<CandidateHistory> toCacheModel();

    @Override
    public CandidateHistory toEscapedModel();

    @Override
    public CandidateHistory toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
