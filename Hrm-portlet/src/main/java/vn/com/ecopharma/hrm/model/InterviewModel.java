package vn.com.ecopharma.hrm.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.trash.model.TrashEntry;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Interview service. Represents a row in the &quot;HRM_Recruitment_Interview&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.com.ecopharma.hrm.model.impl.InterviewModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.com.ecopharma.hrm.model.impl.InterviewImpl}.
 * </p>
 *
 * @author tvt
 * @see Interview
 * @see vn.com.ecopharma.hrm.model.impl.InterviewImpl
 * @see vn.com.ecopharma.hrm.model.impl.InterviewModelImpl
 * @generated
 */
public interface InterviewModel extends BaseModel<Interview>, GroupedModel,
    TrashedModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a interview model instance should use the {@link Interview} interface instead.
     */

    /**
     * Returns the primary key of this interview.
     *
     * @return the primary key of this interview
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this interview.
     *
     * @param primaryKey the primary key of this interview
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the interview ID of this interview.
     *
     * @return the interview ID of this interview
     */
    public long getInterviewId();

    /**
     * Sets the interview ID of this interview.
     *
     * @param interviewId the interview ID of this interview
     */
    public void setInterviewId(long interviewId);

    /**
     * Returns the group ID of this interview.
     *
     * @return the group ID of this interview
     */
    @Override
    public long getGroupId();

    /**
     * Sets the group ID of this interview.
     *
     * @param groupId the group ID of this interview
     */
    @Override
    public void setGroupId(long groupId);

    /**
     * Returns the company ID of this interview.
     *
     * @return the company ID of this interview
     */
    @Override
    public long getCompanyId();

    /**
     * Sets the company ID of this interview.
     *
     * @param companyId the company ID of this interview
     */
    @Override
    public void setCompanyId(long companyId);

    /**
     * Returns the user ID of this interview.
     *
     * @return the user ID of this interview
     */
    @Override
    public long getUserId();

    /**
     * Sets the user ID of this interview.
     *
     * @param userId the user ID of this interview
     */
    @Override
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this interview.
     *
     * @return the user uuid of this interview
     * @throws SystemException if a system exception occurred
     */
    @Override
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this interview.
     *
     * @param userUuid the user uuid of this interview
     */
    @Override
    public void setUserUuid(String userUuid);

    /**
     * Returns the user name of this interview.
     *
     * @return the user name of this interview
     */
    @AutoEscape
    @Override
    public String getUserName();

    /**
     * Sets the user name of this interview.
     *
     * @param userName the user name of this interview
     */
    @Override
    public void setUserName(String userName);

    /**
     * Returns the create date of this interview.
     *
     * @return the create date of this interview
     */
    @Override
    public Date getCreateDate();

    /**
     * Sets the create date of this interview.
     *
     * @param createDate the create date of this interview
     */
    @Override
    public void setCreateDate(Date createDate);

    /**
     * Returns the modified date of this interview.
     *
     * @return the modified date of this interview
     */
    @Override
    public Date getModifiedDate();

    /**
     * Sets the modified date of this interview.
     *
     * @param modifiedDate the modified date of this interview
     */
    @Override
    public void setModifiedDate(Date modifiedDate);

    /**
     * Returns the name of this interview.
     *
     * @return the name of this interview
     */
    @AutoEscape
    public String getName();

    /**
     * Sets the name of this interview.
     *
     * @param name the name of this interview
     */
    public void setName(String name);

    /**
     * Returns the status of this interview.
     *
     * @return the status of this interview
     */
    @Override
    public int getStatus();

    /**
     * Returns the trash entry created when this interview was moved to the Recycle Bin. The trash entry may belong to one of the ancestors of this interview.
     *
     * @return the trash entry created when this interview was moved to the Recycle Bin
     * @throws SystemException if a system exception occurred
     */
    @Override
    public TrashEntry getTrashEntry() throws PortalException, SystemException;

    /**
     * Returns the class primary key of the trash entry for this interview.
     *
     * @return the class primary key of the trash entry for this interview
     */
    @Override
    public long getTrashEntryClassPK();

    /**
     * Returns the trash handler for this interview.
     *
     * @return the trash handler for this interview
     */
    @Override
    public TrashHandler getTrashHandler();

    /**
     * Returns <code>true</code> if this interview is in the Recycle Bin.
     *
     * @return <code>true</code> if this interview is in the Recycle Bin; <code>false</code> otherwise
     */
    @Override
    public boolean isInTrash();

    /**
     * Returns <code>true</code> if the parent of this interview is in the Recycle Bin.
     *
     * @return <code>true</code> if the parent of this interview is in the Recycle Bin; <code>false</code> otherwise
     * @throws SystemException if a system exception occurred
     */
    @Override
    public boolean isInTrashContainer();

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(Interview interview);

    @Override
    public int hashCode();

    @Override
    public CacheModel<Interview> toCacheModel();

    @Override
    public Interview toEscapedModel();

    @Override
    public Interview toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
