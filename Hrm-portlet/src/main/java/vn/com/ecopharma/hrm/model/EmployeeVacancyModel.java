package vn.com.ecopharma.hrm.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the EmployeeVacancy service. Represents a row in the &quot;HRM_Recruitment_EmployeeVacancy&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link vn.com.ecopharma.hrm.model.impl.EmployeeVacancyModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link vn.com.ecopharma.hrm.model.impl.EmployeeVacancyImpl}.
 * </p>
 *
 * @author tvt
 * @see EmployeeVacancy
 * @see vn.com.ecopharma.hrm.model.impl.EmployeeVacancyImpl
 * @see vn.com.ecopharma.hrm.model.impl.EmployeeVacancyModelImpl
 * @generated
 */
public interface EmployeeVacancyModel extends BaseModel<EmployeeVacancy> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a employee vacancy model instance should use the {@link EmployeeVacancy} interface instead.
     */

    /**
     * Returns the primary key of this employee vacancy.
     *
     * @return the primary key of this employee vacancy
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this employee vacancy.
     *
     * @param primaryKey the primary key of this employee vacancy
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the employee vacancy ID of this employee vacancy.
     *
     * @return the employee vacancy ID of this employee vacancy
     */
    public long getEmployeeVacancyId();

    /**
     * Sets the employee vacancy ID of this employee vacancy.
     *
     * @param employeeVacancyId the employee vacancy ID of this employee vacancy
     */
    public void setEmployeeVacancyId(long employeeVacancyId);

    /**
     * Returns the employee ID of this employee vacancy.
     *
     * @return the employee ID of this employee vacancy
     */
    public long getEmployeeId();

    /**
     * Sets the employee ID of this employee vacancy.
     *
     * @param employeeId the employee ID of this employee vacancy
     */
    public void setEmployeeId(long employeeId);

    /**
     * Returns the v_id of this employee vacancy.
     *
     * @return the v_id of this employee vacancy
     */
    public long getV_id();

    /**
     * Sets the v_id of this employee vacancy.
     *
     * @param v_id the v_id of this employee vacancy
     */
    public void setV_id(long v_id);

    /**
     * Returns the group ID of this employee vacancy.
     *
     * @return the group ID of this employee vacancy
     */
    public long getGroupId();

    /**
     * Sets the group ID of this employee vacancy.
     *
     * @param groupId the group ID of this employee vacancy
     */
    public void setGroupId(long groupId);

    /**
     * Returns the company ID of this employee vacancy.
     *
     * @return the company ID of this employee vacancy
     */
    public long getCompanyId();

    /**
     * Sets the company ID of this employee vacancy.
     *
     * @param companyId the company ID of this employee vacancy
     */
    public void setCompanyId(long companyId);

    /**
     * Returns the user ID of this employee vacancy.
     *
     * @return the user ID of this employee vacancy
     */
    public long getUserId();

    /**
     * Sets the user ID of this employee vacancy.
     *
     * @param userId the user ID of this employee vacancy
     */
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this employee vacancy.
     *
     * @return the user uuid of this employee vacancy
     * @throws SystemException if a system exception occurred
     */
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this employee vacancy.
     *
     * @param userUuid the user uuid of this employee vacancy
     */
    public void setUserUuid(String userUuid);

    /**
     * Returns the create date of this employee vacancy.
     *
     * @return the create date of this employee vacancy
     */
    public Date getCreateDate();

    /**
     * Sets the create date of this employee vacancy.
     *
     * @param createDate the create date of this employee vacancy
     */
    public void setCreateDate(Date createDate);

    /**
     * Returns the modified date of this employee vacancy.
     *
     * @return the modified date of this employee vacancy
     */
    public Date getModifiedDate();

    /**
     * Sets the modified date of this employee vacancy.
     *
     * @param modifiedDate the modified date of this employee vacancy
     */
    public void setModifiedDate(Date modifiedDate);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(EmployeeVacancy employeeVacancy);

    @Override
    public int hashCode();

    @Override
    public CacheModel<EmployeeVacancy> toCacheModel();

    @Override
    public EmployeeVacancy toEscapedModel();

    @Override
    public EmployeeVacancy toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
